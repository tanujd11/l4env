region        = "us-east-1"
vpc_id        = "vpc-0b43ceb930414023f"
subnet_id     = "subnet-076fe2de536957ee0"
frr_ami_id    = "ami-0a9115d9e297c6103" # Set to your Ubuntu/FRR AMI
instance_type = "t3.xlarge"

# Auto Scaling Group variables
asg_ami_id    = "ami-001b3fc6186c63470" # Set to your ASG AMI

# SSH key (leave empty to auto-generate)
ssh_key_name      = "k8s-tanuj"             # Or "my-keypair" if using existing key
private_key_path  = "~/.ssh/k8s-tanuj.pem"  # Only set if using an existing SSH key

# BGP config
bgp_listen_range  = "172.31.0.0/16"
mitm_vip = "10.10.0.1"
image_pull_secret_data = "eyJhdXRocyI6eyIwMTM5NDE2MTM1MDMuZGtyLmVjci51cy1lYXN0LTEuYW1hem9uYXdzLmNvbSI6eyJ1c2VybmFtZSI6IkFXUyIsInBhc3N3b3JkIjoiZXlKd1lYbHNiMkZrSWpvaVZXSlZlWFJaVkdacWF6TldaMEV4ZDJka1ZVWlNVbEpCUVRsMldIQlNhV2RNV0ZGWk1sbDBLM1FyY0RabmQweHJNbWRhT1ZKWVJGUkdXbmxsWjI1RWRGRmhaa1ZVUWtsMFFYaHBSREIyYUVKNWIxRlVWRVZDVW5oc2RWVkZaMUJwYlRoemIzTlNZMEZYYXpKYWQxWXpXbVJCTW1WWVdXdHZlbkpuT1dkV2FWbEtMek1yVFhGNFNuWnlWMUl3YzJsc1ltOWtjbU5KZVVkVmJXeEtVRlZSUnpOUWMzcERjRXMyWXpoSVVYSk1WWFZZUWpJMGVtVm1SVTl3TUhvNWVIUkNZMjE1VmxKUVJtTnVZa3BDWTNCM2VYUndSRlpUUm1odWJFOVdka0YwY0dKWE9EbEZhWE0wV21WNVVIQlpabkU0UVRGRVJETmpOM0IxZEhwMlRubEJXblJZTlVWaGFqTllVbTF4TDJSbWNWTkNPVTFMY1RSbU9XWTFSM0lyUTA5Uk5WcHRRV1ZXUkdKWmJuZHpkREpGYVdsTFQybElabTh6YVZNd1N6ZFhRazh3YTFsT1FuSkVRakp2Tml0VGNXTTBSalprZWpkQlQzQlBPRmRxYmtSQ1p6WmxWVWxsWkhGMVprVm9NV0ptUVVab1R5czJhazFUUlhsRVZrMTNTRnBqYjNKVWVVcExNakEzWkdkUE5DOWllRFJxY0hRNU1IWjRiV3cxZG5SeldFUnZSVTByWjBSWGF6TjNSbTlVTUVabFdVbFhUVE5GTTI1UFFVMUJOaTlTY20xRlJWQjBibXczUXpCWVpUUnFRV0kzT1RoWVUzSnVhMkk1Tkd0TVMySnZOVEoyYWxvMmJsSm9NazR4TVc4dlRITTJNak0zT0U5V2RXeHNlVVZGVVZKa1p6VTJVeXNyWWxKTVdHNDNaWHBTVlZJellWaHdRM0E0WkVWVlFXdHVNV2hRTkM4NE5ETXdNUzgzV1U5S1EybHVSMVJGY2pndmFVTnpkbkZ6VGtnMlNVdFNUMEowUTNJM1dUUXZValp6YWk4dk1sUnhOa2s0Wm1NMFNFOXBSbGxuTnpsSk0wMXBibTAzYzBodU1pdEdhV2RYYlcwd1YwbHJWMlkxV1RSeVduQlVRMk5CWlRGRGFtdFRVbXMwYlV0MFJHczVaRmxRY0RKRmEzZHFNMWQxUVhKQmRHNXpRelVyYTNsWFlXa3dLM1k1VVcwNE9YUjNaWFJQS3pKT2JqSnRjRFJvVkZjdk1VdGlObU5pVVVVMlR6QkJZMkpKY1ROcWJGTlhha3MySzJWM1ZqVTJja2cxTkVvMGVWWXdTV0Y2YTBoR1pXZGFkRVJWTjAxb2FHZGhiVlowTmxoMWMxYzRaV2RyTjJadlpGSjNMM3BGUW1Od2VUQkVUbXRFV1RWTVlscE1kV3d5VTNkUFQwTXZXRTVOZURFMGJtbEtXbWxSYWtFNFJETkhZMmxuV0RkSWJXRTVhR3MwYnpOeFVXUk1iMEUxVlcxWWR6VnZSSGxwV0ZSTldIaFBTMjUzUkc4MmRqRkhhWGRNYkVKTk1FVkRUemxHVms4elRGbHJkVFJMV1hGYVlrY3dNVVpJV1RGa1NsSTJWMWhQUkdWcVFtUXZPWGh4YWxSVWFDdEVaVEZYVTFwNU5USklRamhqVVVST1lucElXVzVyUVhGWmVYQk1ZelUyWVhFNU9DdDBUazVSZWtvMWRDOUhTR1oyU2t4aFZXbFVSMDVyUkU0cmMyMXRka2RRV0ZRclQzWnBkRE5zUW05Vk5HWm1jbk5xV1RoaFpWWkJhMU1yTUhCd1dsUlFWVVpFWmxSa1NVZFJVeTlWT1M5NE4zRkxXWGs0ZERaS2Iyc3dWRXR3VGpJM2FXODNWa05rT1d4YVJHUmphMUF3U210YU5YSkZNM2RTY1ZJNFpGTnhNMUZsY0RsdEx6QnljMjgxWTNrd1FsSk1Va2R4WjJ4YVoxaEtlbVJYTWtWQk5UaFVZMDlzTDNSUlZGcExRamt6UzNGUGFra3ZjM1ZQTWpKMlNUVXJaazFHY2toUFUzVTVSRlZWT1RoWmVXUjJURXRaU0Uxek1YbHNSSGQxTm1SQ2JHcGhSbUkyUkhSaWVWQjNTek5TTDFaaGEwUnNlWFkwUm5wbk0zb3pTMVpIV1dRMmFHNVhWRVJ2VlhGNGVUbHFhVU42VlU5MlNqZDFaakZZWW1SUFRuUXdhRzV5ZDNGVkt6aE1ielF4ZEd4b2MyYzlJaXdpWkdGMFlXdGxlU0k2SWtGUlJVSkJTR2gzYlRCWllVbFRTbVZTZEVwdE5XNHhSeloxY1dWbGExaDFiMWhZVUdVMVZVWmpaVGxTY1Rndk1UUjNRVUZCU0RSM1prRlpTa3R2V2tsb2RtTk9RVkZqUjI5SE9IZGlVVWxDUVVSQ2IwSm5hM0ZvYTJsSE9YY3dRa0ozUlhkSVoxbEtXVWxhU1VGWFZVUkNRVVYxVFVKRlJVUkNObW8zV21KbWNEVndMMHB2Y2xGNmQwbENSVWxCTjFCQk1IcDBUM3BIVlRSSGIwOUJWV2xGTnpKb2JpOUpXSFpLUzFoT2VuQk9MM292TWtSbWNqUnpiRTFSZDNObE9FSlNZMjluVWtWd1FYUTNNMVpFY1RJMmNtSkRUVWxJWlhOa1VXRlJhRms5SWl3aWRtVnljMmx2YmlJNklqSWlMQ0owZVhCbElqb2lSRUZVUVY5TFJWa2lMQ0psZUhCcGNtRjBhVzl1SWpveE56UTVNVFk0T0RNeGZRPT0iLCJlbWFpbCI6Im5vdEB1c2VkLmNvbSIsImF1dGgiOiJRVmRUT21WNVNuZFpXR3h6WWpKR2EwbHFiMmxXVjBwV1pWaFNXbFpIV25GaGVrNVhXakJGZUdReVpHdFdWVnBUVld4S1FsRlViREpYU0VKVFlWZGtUVmRHUmxwTmJHd3dTek5SY21ORVdtNWtNSGh5VFcxa1lVOVdTbGxTUmxKSFYyNXNiRm95TlVWa1JrWm9XbXRXVlZGcmJEQlJXR2h3VWtSQ01tRkZTalZpTVVaVlZrVldRMVZ1YUhOa1ZsWkdXakZDY0dKVWFIcGlNMDVUV1RCR1dHRjZTbUZrTVZsNlYyMVNRazF0VmxsWFYzUjJaVzVLYms5WFpGZGhWbXhMVEhwTmNsUllSalJUYmxwNVZqRkpkMk15YkhOWmJUbHJZMjFPU21WVlpGWmlWM2hMVlVaV1VsSjZUbEZqTTNCRVkwVnpNbGw2YUVsVldFcE5WbGhXV1ZGcVNUQmxiVlp0VWxVNWQwMUlielZsU0ZKRFdUSXhOVlpzU2xGU2JVNTFXV3R3UTFrelFqTmxXRkozVWtaYVZGSnRhSFZpUlRsWFpHdEdNR05IU2xoUFJHeEdZVmhOTUZkdFZqVlZTRUphV201Rk5GRlVSa1ZTUkU1cVRqTkNNV1JJY0RKVWJteENWMjVTV1U1VlZtaGhhazVaVlcweGVFd3lVbTFqVms1RFQxVXhUR05VVW0xUFYxa3hVak5KY2xFd09WSk9WbkIwVVZkV1YxSkhTbHBpYm1SNlpFUktSbUZYYkV4VU1teEpXbTA0ZW1GV1RYZFRlbVJZVVdzNGQyRXhiRTlSYmtwRlVXcEtkazVwZEZSalYwMHdVbXBhYTJWcVpFSlVNMEpRVDBaa2NXSnJVa05hZWxwc1ZsVnNiRnBJUmpGYWExWnZUVmRLYlZGVldtOVVlWE15WVdzeFZGSlliRVZXYXpFelUwWndhbUl6U2xWbFZYQk1UV3BCTTFwSFpGQk9RemxwWlVSU2NXTklVVFZOU0ZvMFlsZDNNV1J1VW5wWFJWSjJVbFV3Y2xvd1VsaGhlazR6VW0wNVZVMUZXbXhYVld4WVZGUk9SazB5TlZCUlZURkNUbWs1VTJOdE1VWlNWa0l3WW0xM00xRjZRbGxhVkZKeFVWZEpNMDlVYUZsVk0wcDFZVEpKTlU1SGRFMVRNa3AyVGxSS01tRnNiekppYkVwdlRXczBlRTFYT0haVVNFMHlUV3BOTTA5Rk9WZGtWM2h6WlZWV1JsVldTbXRhZWxVeVZYbHpjbGxzU2sxWFJ6UXpXbGh3VTFaV1NYcFpWbWgzVVROQk5GcEZWbFpSVjNSMVRWZG9VVTVET0RST1JFMTNUVk00TTFkVk9VdFJNbXgxVWpGU1JtTnFaM1poVlU1NlpHNUdlbFJyWnpKVFZYUlRWREJLTUZFelNUTlhWRkYyVldwYWVtRnBPSFpOYkZKNFRtdHJORnB0VFRCVFJUbHdVbXhzYms1NmJFcE5NREZ3WW0wd00yTXdhSFZOYVhSSFlWZGtXR0pYTUhkV01HeHlWakpaTVZkVVVubFhia0pWVVRKT1FscFVSa1JoYlhSVVZXMXpNR0pWZERCU1IzTTFXa1pzVVdORVNrWmhNMlJ4VFRGa01WRllTa0prUnpWNlVYcFZjbUV6YkZoWlYydDNTek5aTlZWWE1EUlBXRkl6V2xoU1VFdDZTazlpYWtwMFkwUlNiMVpHWTNaTlZYUnBUbTFPYVZWVlZUSlVla0pDV1RKS1NtTlVUbkZpUms1WVlXdHpNa3N5VmpOV2FsVXlZMnRuTVU1RmJ6QmxWbGwzVTFkR05tRXdhRWRhVjJSaFpFVlNWazR3TVc5aFIyUm9ZbFphTUU1c2FERmpNV00wV2xka2NrNHlXblphUmtvelRETndSbEZ0VG5kbFZFSkZWRzEwUlZkVVZrMVpiSEJOWkZkM2VWVXpaRkJVTUUxMlYwVTFUbVZFUlRCaWJXeExWMjFzVW1GclJUUlNSRTVJV1RKc2JsZEVaRWxpVjBVMVlVZHpNR0o2VG5oVlYxSk5ZakJGTVZaWE1WbGtlbFoyVWtoc2NGZEdVazVYU0doUVV6STFNMUpIT0RKa2FrWklZVmhrVFdKRlNrNU5SVlpFVkhwc1IxWnJPSHBVUm14eVpGUlNURmRZUm1GWmEyTjNUVlZhU1ZkVVJtdFRiRWt5VmpGb1VGSkhWbkZSYlZGMlQxaG9lR0ZzVWxWaFEzUkZXbFJHV0ZVeGNEVk9WRXBKVVdwb2FsVlZVazlaYm5CSlYxYzFjbEZZUmxwbFdFSk5XWHBWTWxsWVJUVlBRM1F3VkdzMVVtVnJiekZrUXpsSVUwZGFNbE5yZUdoV1YyeFZVakExY2xKRk5ISmpNakYwWkd0a1VWZEdVWEpVTTFwd1pFUk9jMUZ0T1ZaT1IxcHRZMjVPY1ZkVWFHaGFWbHBDWVRGTmNrMUlRbmRYYkZKUlZsVmFSVnBzVW10VFZXUlNWWGs1Vms5VE9UUk9NMFpNVjFock5HUkVXa3RpTW5OM1ZrVjBkMVJxU1ROaFZ6Z3pWbXRPYTA5WGVHRlNSMUpxWVRGQmQxTnRkR0ZPV0VwR1RUTmtVMk5XU1RSYVJrNTRUVEZHYkdORWJIUk1la0o1WXpJNE1Wa3phM2RSYkVwTlZXdGtlRm95ZUdGYU1XaExaVzFTV0UxclZrSk9WR2hWV1RBNWMwd3pVbEpXUm5CTVVXcHJlbE16UmxCaGEydDJZek5XVUUxcVNqSlRWRlZ5V21zeFIyTnJhRkJWTTFVMVVrWldWazlVYUZwbFYxSXlWRVYwV2xORk1YcE5XR3h6VWtoa01VNXRVa05pUjNCb1VtMUpNbEpJVW1sbFZrSXpVM3BPVTB3eFdtaGhNRkp6WlZoWk1GSnVjRzVOTTI5NlV6RmFTRmRYVVRKaFJ6VllWa1ZTZGxaWVJqUmxWR3h4WVZWT05sWlZPVEpUYW1ReFdtcEdXVmx0VWxCVWJsRjNZVWMxZVdRelJsWkxlbWhOWW5wUmVHUkhlRzlqTW1NNVNXbDNhVnBIUmpCWlYzUnNaVk5KTmtsclJsSlNWVXBDVTBkb00ySlVRbHBaVld4VVUyMVdVMlJGY0hST1Z6UjRVbnBhTVdOWFZteGhNV2d4WWpGb1dWVkhWVEZXVlZwcVdsUnNVMk5VWjNaTlZGSXpVVlZHUWxORVVqTmFhMFphVTJ0MGRsZHJiRzlrYlU1UFVWWkdhbEl5T1VoUFNHUnBWVlZzUTFGVlVrTmlNRXB1WVROR2IyRXliRWhQV0dOM1VXdEtNMUpZWkVsYU1XeExWMVZzWVZOVlJsaFdWVkpEVVZWV01WUlZTa1pTVlZKRFRtMXZNMWR0U20xalJGWjNUREJ3ZG1Oc1JqWmtNR3hEVWxWc1FrNHhRa0pOU0hBd1ZETndTRlpVVWtoaU1EbENWbGRzUms1NlNtOWlhVGxLVjBoYVMxTXhhRTlsYmtKUFRETnZkazFyVW0xamFsSjZZa1V4VW1RelRteFBSVXBUV1RJNWJsVnJWbmRSV0ZFelRURmFSV05VU1RKamJVcEVWRlZzU1ZwWVRtdFZWMFpTWVVack9VbHBkMmxrYlZaNVl6SnNkbUpwU1RaSmFrbHBURU5LTUdWWVFteEphbTlwVWtWR1ZWRldPVXhTVm10cFRFTktiR1ZJUW5CamJVWXdZVmM1ZFVscWIzaE9lbEUxVFZSWk5FOUVUWGhtVVQwOSJ9fX0="